/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/isbot@5.1.19";
exports.ids = ["vendor-chunks/isbot@5.1.19"];
exports.modules = {

/***/ "(action-browser)/./node_modules/.pnpm/isbot@5.1.19/node_modules/isbot/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/.pnpm/isbot@5.1.19/node_modules/isbot/index.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  createIsbot: () => createIsbot,\n  createIsbotFromList: () => createIsbotFromList,\n  getPattern: () => getPattern,\n  isbot: () => isbot,\n  isbotMatch: () => isbotMatch,\n  isbotMatches: () => isbotMatches,\n  isbotNaive: () => isbotNaive,\n  isbotPattern: () => isbotPattern,\n  isbotPatterns: () => isbotPatterns,\n  list: () => list\n});\nmodule.exports = __toCommonJS(index_exports);\n\n// src/patterns.json\nvar patterns_default = [\n  \" daum[ /]\",\n  \" deusu/\",\n  \" yadirectfetcher\",\n  \"(?:^|[^g])news(?!sapphire)\",\n  \"(?<! (?:channel/|google/))google(?!(app|/google| pixel))\",\n  \"(?<! cu)bots?(?:\\\\b|_)\",\n  \"(?<!(?:lib))http\",\n  \"(?<![hg]m)score\",\n  \"@[a-z][\\\\w-]+\\\\.\",\n  \"\\\\(\\\\)\",\n  \"\\\\.com\\\\b\",\n  \"\\\\btime/\",\n  \"^<\",\n  \"^[\\\\w \\\\.\\\\-\\\\(?:\\\\):]+(?:/v?\\\\d+(?:\\\\.\\\\d+)?(?:\\\\.\\\\d{1,10})*?)?(?:,|$)\",\n  \"^[^ ]{50,}$\",\n  \"^\\\\d+\\\\b\",\n  \"^\\\\w*search\\\\b\",\n  \"^\\\\w+/[\\\\w\\\\(\\\\)]*$\",\n  \"^active\",\n  \"^ad muncher\",\n  \"^amaya\",\n  \"^avsdevicesdk/\",\n  \"^biglotron\",\n  \"^bot\",\n  \"^bw/\",\n  \"^clamav[ /]\",\n  \"^client/\",\n  \"^cobweb/\",\n  \"^custom\",\n  \"^ddg[_-]android\",\n  \"^discourse\",\n  \"^dispatch/\\\\d\",\n  \"^downcast/\",\n  \"^duckduckgo\",\n  \"^facebook\",\n  \"^getright/\",\n  \"^gozilla/\",\n  \"^hobbit\",\n  \"^hotzonu\",\n  \"^hwcdn/\",\n  \"^igetter/\",\n  \"^jeode/\",\n  \"^jetty/\",\n  \"^jigsaw\",\n  \"^microsoft bits\",\n  \"^movabletype\",\n  \"^mozilla/5\\\\.0\\\\s[a-z\\\\.-]+$\",\n  \"^mozilla/\\\\d\\\\.\\\\d \\\\(compatible;?\\\\)$\",\n  \"^mozilla/\\\\d\\\\.\\\\d \\\\w*$\",\n  \"^navermailapp\",\n  \"^netsurf\",\n  \"^offline\",\n  \"^openai/\",\n  \"^owler\",\n  \"^php\",\n  \"^postman\",\n  \"^python\",\n  \"^rank\",\n  \"^read\",\n  \"^reed\",\n  \"^rest\",\n  \"^rss\",\n  \"^snapchat\",\n  \"^space bison\",\n  \"^svn\",\n  \"^swcd \",\n  \"^taringa\",\n  \"^thumbor/\",\n  \"^track\",\n  \"^w3c\",\n  \"^webbandit/\",\n  \"^webcopier\",\n  \"^wget\",\n  \"^whatsapp\",\n  \"^wordpress\",\n  \"^xenu link sleuth\",\n  \"^yahoo\",\n  \"^yandex\",\n  \"^zdm/\\\\d\",\n  \"^zoom marketplace/\",\n  \"^{{.*}}$\",\n  \"adscanner/\",\n  \"analyzer\",\n  \"archive\",\n  \"ask jeeves/teoma\",\n  \"bit\\\\.ly/\",\n  \"bluecoat drtr\",\n  \"browsex\",\n  \"burpcollaborator\",\n  \"capture\",\n  \"catch\",\n  \"check\\\\b\",\n  \"checker\",\n  \"chrome-lighthouse\",\n  \"chromeframe\",\n  \"classifier\",\n  \"cloudflare\",\n  \"convertify\",\n  \"cookiehubscan\",\n  \"crawl\",\n  \"cypress/\",\n  \"dareboost\",\n  \"datanyze\",\n  \"dejaclick\",\n  \"detect\",\n  \"dmbrowser\",\n  \"download\",\n  \"evc-batch/\",\n  \"exaleadcloudview\",\n  \"feed\",\n  \"firephp\",\n  \"functionize\",\n  \"gomezagent\",\n  \"headless\",\n  \"httrack\",\n  \"hubspot marketing grader\",\n  \"hydra\",\n  \"ibisbrowser\",\n  \"images\",\n  \"infrawatch\",\n  \"insight\",\n  \"inspect\",\n  \"iplabel\",\n  \"ips-agent\",\n  \"java(?!;)\",\n  \"jsjcw_scanner\",\n  \"library\",\n  \"linkcheck\",\n  \"mail\\\\.ru/\",\n  \"manager\",\n  \"measure\",\n  \"neustar wpm\",\n  \"node\",\n  \"nutch\",\n  \"offbyone\",\n  \"optimize\",\n  \"pageburst\",\n  \"pagespeed\",\n  \"parser\",\n  \"perl\",\n  \"phantomjs\",\n  \"pingdom\",\n  \"powermarks\",\n  \"preview\",\n  \"proxy\",\n  \"ptst[ /]\\\\d\",\n  \"reputation\",\n  \"resolver\",\n  \"retriever\",\n  \"rexx;\",\n  \"rigor\",\n  \"rss\\\\b\",\n  \"scanner\\\\.\",\n  \"scrape\",\n  \"server\",\n  \"sogou\",\n  \"sparkler/\",\n  \"speedcurve\",\n  \"spider\",\n  \"splash\",\n  \"statuscake\",\n  \"supercleaner\",\n  \"synapse\",\n  \"synthetic\",\n  \"tools\",\n  \"torrent\",\n  \"trace\",\n  \"transcoder\",\n  \"url\",\n  \"validator\",\n  \"virtuoso\",\n  \"wappalyzer\",\n  \"webglance\",\n  \"webkit2png\",\n  \"whatcms/\",\n  \"zgrab\"\n];\n\n// src/pattern.ts\nvar fullPattern = \" daum[ /]| deusu/| yadirectfetcher|(?:^|[^g])news(?!sapphire)|(?<! (?:channel/|google/))google(?!(app|/google| pixel))|(?<! cu)bots?(?:\\\\b|_)|(?<!(?:lib))http|(?<![hg]m)score|@[a-z][\\\\w-]+\\\\.|\\\\(\\\\)|\\\\.com\\\\b|\\\\btime/|^<|^[\\\\w \\\\.\\\\-\\\\(?:\\\\):]+(?:/v?\\\\d+(?:\\\\.\\\\d+)?(?:\\\\.\\\\d{1,10})*?)?(?:,|$)|^[^ ]{50,}$|^\\\\d+\\\\b|^\\\\w*search\\\\b|^\\\\w+/[\\\\w\\\\(\\\\)]*$|^active|^ad muncher|^amaya|^avsdevicesdk/|^biglotron|^bot|^bw/|^clamav[ /]|^client/|^cobweb/|^custom|^ddg[_-]android|^discourse|^dispatch/\\\\d|^downcast/|^duckduckgo|^facebook|^getright/|^gozilla/|^hobbit|^hotzonu|^hwcdn/|^igetter/|^jeode/|^jetty/|^jigsaw|^microsoft bits|^movabletype|^mozilla/5\\\\.0\\\\s[a-z\\\\.-]+$|^mozilla/\\\\d\\\\.\\\\d \\\\(compatible;?\\\\)$|^mozilla/\\\\d\\\\.\\\\d \\\\w*$|^navermailapp|^netsurf|^offline|^openai/|^owler|^php|^postman|^python|^rank|^read|^reed|^rest|^rss|^snapchat|^space bison|^svn|^swcd |^taringa|^thumbor/|^track|^w3c|^webbandit/|^webcopier|^wget|^whatsapp|^wordpress|^xenu link sleuth|^yahoo|^yandex|^zdm/\\\\d|^zoom marketplace/|^{{.*}}$|adscanner/|analyzer|archive|ask jeeves/teoma|bit\\\\.ly/|bluecoat drtr|browsex|burpcollaborator|capture|catch|check\\\\b|checker|chrome-lighthouse|chromeframe|classifier|cloudflare|convertify|cookiehubscan|crawl|cypress/|dareboost|datanyze|dejaclick|detect|dmbrowser|download|evc-batch/|exaleadcloudview|feed|firephp|functionize|gomezagent|headless|httrack|hubspot marketing grader|hydra|ibisbrowser|images|infrawatch|insight|inspect|iplabel|ips-agent|java(?!;)|jsjcw_scanner|library|linkcheck|mail\\\\.ru/|manager|measure|neustar wpm|node|nutch|offbyone|optimize|pageburst|pagespeed|parser|perl|phantomjs|pingdom|powermarks|preview|proxy|ptst[ /]\\\\d|reputation|resolver|retriever|rexx;|rigor|rss\\\\b|scanner\\\\.|scrape|server|sogou|sparkler/|speedcurve|spider|splash|statuscake|supercleaner|synapse|synthetic|tools|torrent|trace|transcoder|url|validator|virtuoso|wappalyzer|webglance|webkit2png|whatcms/|zgrab\";\n\n// src/index.ts\nvar naivePattern = /bot|crawl|http|lighthouse|scan|search|spider/i;\nvar pattern;\nfunction getPattern() {\n  if (pattern instanceof RegExp) {\n    return pattern;\n  }\n  try {\n    pattern = new RegExp(fullPattern, \"i\");\n  } catch (error) {\n    pattern = naivePattern;\n  }\n  return pattern;\n}\nvar list = patterns_default;\nvar isbotNaive = (userAgent) => Boolean(userAgent) && naivePattern.test(userAgent);\nfunction isbot(userAgent) {\n  return Boolean(userAgent) && getPattern().test(userAgent);\n}\nvar createIsbot = (customPattern) => (userAgent) => Boolean(userAgent) && customPattern.test(userAgent);\nvar createIsbotFromList = (list2) => {\n  const pattern2 = new RegExp(list2.join(\"|\"), \"i\");\n  return (userAgent) => Boolean(userAgent) && pattern2.test(userAgent);\n};\nvar isbotMatch = (userAgent) => {\n  var _a, _b;\n  return (_b = (_a = userAgent == null ? void 0 : userAgent.match(getPattern())) == null ? void 0 : _a[0]) != null ? _b : null;\n};\nvar isbotMatches = (userAgent) => list.map((part) => {\n  var _a;\n  return (_a = userAgent == null ? void 0 : userAgent.match(new RegExp(part, \"i\"))) == null ? void 0 : _a[0];\n}).filter(Boolean);\nvar isbotPattern = (userAgent) => {\n  var _a;\n  return userAgent ? (_a = list.find((pattern2) => new RegExp(pattern2, \"i\").test(userAgent))) != null ? _a : null : null;\n};\nvar isbotPatterns = (userAgent) => userAgent ? list.filter((pattern2) => new RegExp(pattern2, \"i\").test(userAgent)) : [];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/.pnpm/isbot@5.1.19/node_modules/isbot/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/isbot@5.1.19/node_modules/isbot/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/.pnpm/isbot@5.1.19/node_modules/isbot/index.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  createIsbot: () => createIsbot,\n  createIsbotFromList: () => createIsbotFromList,\n  getPattern: () => getPattern,\n  isbot: () => isbot,\n  isbotMatch: () => isbotMatch,\n  isbotMatches: () => isbotMatches,\n  isbotNaive: () => isbotNaive,\n  isbotPattern: () => isbotPattern,\n  isbotPatterns: () => isbotPatterns,\n  list: () => list\n});\nmodule.exports = __toCommonJS(index_exports);\n\n// src/patterns.json\nvar patterns_default = [\n  \" daum[ /]\",\n  \" deusu/\",\n  \" yadirectfetcher\",\n  \"(?:^|[^g])news(?!sapphire)\",\n  \"(?<! (?:channel/|google/))google(?!(app|/google| pixel))\",\n  \"(?<! cu)bots?(?:\\\\b|_)\",\n  \"(?<!(?:lib))http\",\n  \"(?<![hg]m)score\",\n  \"@[a-z][\\\\w-]+\\\\.\",\n  \"\\\\(\\\\)\",\n  \"\\\\.com\\\\b\",\n  \"\\\\btime/\",\n  \"^<\",\n  \"^[\\\\w \\\\.\\\\-\\\\(?:\\\\):]+(?:/v?\\\\d+(?:\\\\.\\\\d+)?(?:\\\\.\\\\d{1,10})*?)?(?:,|$)\",\n  \"^[^ ]{50,}$\",\n  \"^\\\\d+\\\\b\",\n  \"^\\\\w*search\\\\b\",\n  \"^\\\\w+/[\\\\w\\\\(\\\\)]*$\",\n  \"^active\",\n  \"^ad muncher\",\n  \"^amaya\",\n  \"^avsdevicesdk/\",\n  \"^biglotron\",\n  \"^bot\",\n  \"^bw/\",\n  \"^clamav[ /]\",\n  \"^client/\",\n  \"^cobweb/\",\n  \"^custom\",\n  \"^ddg[_-]android\",\n  \"^discourse\",\n  \"^dispatch/\\\\d\",\n  \"^downcast/\",\n  \"^duckduckgo\",\n  \"^facebook\",\n  \"^getright/\",\n  \"^gozilla/\",\n  \"^hobbit\",\n  \"^hotzonu\",\n  \"^hwcdn/\",\n  \"^igetter/\",\n  \"^jeode/\",\n  \"^jetty/\",\n  \"^jigsaw\",\n  \"^microsoft bits\",\n  \"^movabletype\",\n  \"^mozilla/5\\\\.0\\\\s[a-z\\\\.-]+$\",\n  \"^mozilla/\\\\d\\\\.\\\\d \\\\(compatible;?\\\\)$\",\n  \"^mozilla/\\\\d\\\\.\\\\d \\\\w*$\",\n  \"^navermailapp\",\n  \"^netsurf\",\n  \"^offline\",\n  \"^openai/\",\n  \"^owler\",\n  \"^php\",\n  \"^postman\",\n  \"^python\",\n  \"^rank\",\n  \"^read\",\n  \"^reed\",\n  \"^rest\",\n  \"^rss\",\n  \"^snapchat\",\n  \"^space bison\",\n  \"^svn\",\n  \"^swcd \",\n  \"^taringa\",\n  \"^thumbor/\",\n  \"^track\",\n  \"^w3c\",\n  \"^webbandit/\",\n  \"^webcopier\",\n  \"^wget\",\n  \"^whatsapp\",\n  \"^wordpress\",\n  \"^xenu link sleuth\",\n  \"^yahoo\",\n  \"^yandex\",\n  \"^zdm/\\\\d\",\n  \"^zoom marketplace/\",\n  \"^{{.*}}$\",\n  \"adscanner/\",\n  \"analyzer\",\n  \"archive\",\n  \"ask jeeves/teoma\",\n  \"bit\\\\.ly/\",\n  \"bluecoat drtr\",\n  \"browsex\",\n  \"burpcollaborator\",\n  \"capture\",\n  \"catch\",\n  \"check\\\\b\",\n  \"checker\",\n  \"chrome-lighthouse\",\n  \"chromeframe\",\n  \"classifier\",\n  \"cloudflare\",\n  \"convertify\",\n  \"cookiehubscan\",\n  \"crawl\",\n  \"cypress/\",\n  \"dareboost\",\n  \"datanyze\",\n  \"dejaclick\",\n  \"detect\",\n  \"dmbrowser\",\n  \"download\",\n  \"evc-batch/\",\n  \"exaleadcloudview\",\n  \"feed\",\n  \"firephp\",\n  \"functionize\",\n  \"gomezagent\",\n  \"headless\",\n  \"httrack\",\n  \"hubspot marketing grader\",\n  \"hydra\",\n  \"ibisbrowser\",\n  \"images\",\n  \"infrawatch\",\n  \"insight\",\n  \"inspect\",\n  \"iplabel\",\n  \"ips-agent\",\n  \"java(?!;)\",\n  \"jsjcw_scanner\",\n  \"library\",\n  \"linkcheck\",\n  \"mail\\\\.ru/\",\n  \"manager\",\n  \"measure\",\n  \"neustar wpm\",\n  \"node\",\n  \"nutch\",\n  \"offbyone\",\n  \"optimize\",\n  \"pageburst\",\n  \"pagespeed\",\n  \"parser\",\n  \"perl\",\n  \"phantomjs\",\n  \"pingdom\",\n  \"powermarks\",\n  \"preview\",\n  \"proxy\",\n  \"ptst[ /]\\\\d\",\n  \"reputation\",\n  \"resolver\",\n  \"retriever\",\n  \"rexx;\",\n  \"rigor\",\n  \"rss\\\\b\",\n  \"scanner\\\\.\",\n  \"scrape\",\n  \"server\",\n  \"sogou\",\n  \"sparkler/\",\n  \"speedcurve\",\n  \"spider\",\n  \"splash\",\n  \"statuscake\",\n  \"supercleaner\",\n  \"synapse\",\n  \"synthetic\",\n  \"tools\",\n  \"torrent\",\n  \"trace\",\n  \"transcoder\",\n  \"url\",\n  \"validator\",\n  \"virtuoso\",\n  \"wappalyzer\",\n  \"webglance\",\n  \"webkit2png\",\n  \"whatcms/\",\n  \"zgrab\"\n];\n\n// src/pattern.ts\nvar fullPattern = \" daum[ /]| deusu/| yadirectfetcher|(?:^|[^g])news(?!sapphire)|(?<! (?:channel/|google/))google(?!(app|/google| pixel))|(?<! cu)bots?(?:\\\\b|_)|(?<!(?:lib))http|(?<![hg]m)score|@[a-z][\\\\w-]+\\\\.|\\\\(\\\\)|\\\\.com\\\\b|\\\\btime/|^<|^[\\\\w \\\\.\\\\-\\\\(?:\\\\):]+(?:/v?\\\\d+(?:\\\\.\\\\d+)?(?:\\\\.\\\\d{1,10})*?)?(?:,|$)|^[^ ]{50,}$|^\\\\d+\\\\b|^\\\\w*search\\\\b|^\\\\w+/[\\\\w\\\\(\\\\)]*$|^active|^ad muncher|^amaya|^avsdevicesdk/|^biglotron|^bot|^bw/|^clamav[ /]|^client/|^cobweb/|^custom|^ddg[_-]android|^discourse|^dispatch/\\\\d|^downcast/|^duckduckgo|^facebook|^getright/|^gozilla/|^hobbit|^hotzonu|^hwcdn/|^igetter/|^jeode/|^jetty/|^jigsaw|^microsoft bits|^movabletype|^mozilla/5\\\\.0\\\\s[a-z\\\\.-]+$|^mozilla/\\\\d\\\\.\\\\d \\\\(compatible;?\\\\)$|^mozilla/\\\\d\\\\.\\\\d \\\\w*$|^navermailapp|^netsurf|^offline|^openai/|^owler|^php|^postman|^python|^rank|^read|^reed|^rest|^rss|^snapchat|^space bison|^svn|^swcd |^taringa|^thumbor/|^track|^w3c|^webbandit/|^webcopier|^wget|^whatsapp|^wordpress|^xenu link sleuth|^yahoo|^yandex|^zdm/\\\\d|^zoom marketplace/|^{{.*}}$|adscanner/|analyzer|archive|ask jeeves/teoma|bit\\\\.ly/|bluecoat drtr|browsex|burpcollaborator|capture|catch|check\\\\b|checker|chrome-lighthouse|chromeframe|classifier|cloudflare|convertify|cookiehubscan|crawl|cypress/|dareboost|datanyze|dejaclick|detect|dmbrowser|download|evc-batch/|exaleadcloudview|feed|firephp|functionize|gomezagent|headless|httrack|hubspot marketing grader|hydra|ibisbrowser|images|infrawatch|insight|inspect|iplabel|ips-agent|java(?!;)|jsjcw_scanner|library|linkcheck|mail\\\\.ru/|manager|measure|neustar wpm|node|nutch|offbyone|optimize|pageburst|pagespeed|parser|perl|phantomjs|pingdom|powermarks|preview|proxy|ptst[ /]\\\\d|reputation|resolver|retriever|rexx;|rigor|rss\\\\b|scanner\\\\.|scrape|server|sogou|sparkler/|speedcurve|spider|splash|statuscake|supercleaner|synapse|synthetic|tools|torrent|trace|transcoder|url|validator|virtuoso|wappalyzer|webglance|webkit2png|whatcms/|zgrab\";\n\n// src/index.ts\nvar naivePattern = /bot|crawl|http|lighthouse|scan|search|spider/i;\nvar pattern;\nfunction getPattern() {\n  if (pattern instanceof RegExp) {\n    return pattern;\n  }\n  try {\n    pattern = new RegExp(fullPattern, \"i\");\n  } catch (error) {\n    pattern = naivePattern;\n  }\n  return pattern;\n}\nvar list = patterns_default;\nvar isbotNaive = (userAgent) => Boolean(userAgent) && naivePattern.test(userAgent);\nfunction isbot(userAgent) {\n  return Boolean(userAgent) && getPattern().test(userAgent);\n}\nvar createIsbot = (customPattern) => (userAgent) => Boolean(userAgent) && customPattern.test(userAgent);\nvar createIsbotFromList = (list2) => {\n  const pattern2 = new RegExp(list2.join(\"|\"), \"i\");\n  return (userAgent) => Boolean(userAgent) && pattern2.test(userAgent);\n};\nvar isbotMatch = (userAgent) => {\n  var _a, _b;\n  return (_b = (_a = userAgent == null ? void 0 : userAgent.match(getPattern())) == null ? void 0 : _a[0]) != null ? _b : null;\n};\nvar isbotMatches = (userAgent) => list.map((part) => {\n  var _a;\n  return (_a = userAgent == null ? void 0 : userAgent.match(new RegExp(part, \"i\"))) == null ? void 0 : _a[0];\n}).filter(Boolean);\nvar isbotPattern = (userAgent) => {\n  var _a;\n  return userAgent ? (_a = list.find((pattern2) => new RegExp(pattern2, \"i\").test(userAgent))) != null ? _a : null : null;\n};\nvar isbotPatterns = (userAgent) => userAgent ? list.filter((pattern2) => new RegExp(pattern2, \"i\").test(userAgent)) : [];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/isbot@5.1.19/node_modules/isbot/index.js\n");

/***/ })

};
;